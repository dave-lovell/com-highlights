---
title: "Reading Census Files"
author: "Ladun"
format: html
editor: visual
---

#### libraries

```{r libs}
library(here)
# library(vroom)
library(readr)
```

### Make CoM name vector

```{r makeCoMNameVecor}
## tiny-helper
what <- function(...) dir( here(...) )

com_names_vector <- what("data", "inputs", "census", "com", "csvs")
str(com_names_vector)

```

```{r settingDirectory}
path_csvs <- here("data", "inputs", "census", "com", "csvs")
path_csvs
```

### Read CoM csvs

#### Create table_read function

```{r tableRead}
table_read <- function(x, address){
  
  path_csvs <- here("data", "inputs", "census", address, "csvs", x)
  path_csvs <- dir(path_csvs, full.names = TRUE)
  
  tables <- lapply(path_csvs, read_csv) 
   return(tables)
}

```

```{r readCoMCsvs}
com_paths <- paste(path_csvs, com_names_vector, sep = "/")

com_names_list <- as.list(com_names_vector)
names(com_names_list) <- com_names_list

## 1. change names inside function body to be clearer/more general
## 2. name the function in the above code chunk
## 3. call the same funciton in each lapply
## 4. use the function to read Diocese tables
## 5. Combine all the lists of tables into one big list of 3 (nation, diocese, com)
## 6. Save the list as an RDS (?saveRDS) "01_sdjkfdsalk_2022-10-12.RDS

# com_tables <- lapply(
#   com_names_list,
#   function(x){
#     path_csvs_langley <- here("data", "inputs", "census", "com", "csvs", x)
#     langley_sub <- dir(path_csvs_langley, full.names = TRUE)
#     tables <- lapply(langley_sub, read_csv)
#     
#     return(tables)
#   }
# )

# toast <- fuction(bread, spread){
# toast <- toast_this(bread)
# toast <- spread(toast, spread)
#return(toast)
#}

# tell_john_to(bread, toast)
# tell_john_to(bread, toast, spread = "jam")


com_tables <- lapply(com_names_list, table_read, "com")

```

### Read Nation csvs

```{r readNationcsvs}
nation_vector <- what("data", "inputs", "census", "nations", "csvs")
str(nation_vector)
path_nation <- here("data", "inputs", "census", "nations", "csvs")
path_nation
path_nation_list <- as.list(nation_vector)
names(path_nation_list) <- path_nation_list

nation_tables <- lapply(path_nation_list, table_read, "nation")
# str(nation_tables)
```

### Read Diocese csvs

```{r readDiocesecsvs}
dioceses_vector <- what("data", "inputs", "census", "dioceses", "csvs")
# str(dioceses_vector)
path_dioceses <- here("data", "inputs", "census", "dioceses", "csvs")
# path_dioceses
path_dioceses_list <- as.list(dioceses_vector)
names(path_dioceses_list) <- path_dioceses_list

dioceses_tables <- lapply(path_dioceses_list, table_read, "dioceses")

```

## Make big list and save

```{r saveList}

overall_table <-
  list(
    com = com_tables,
    nation = nation_tables,
    dioceses = dioceses_tables
    )

# overall_table
saveRDS(
  overall_table,
  file = here("data", "intermediate", "census", "merged-data",
              "01_all-census-data_list_2022-10-12.RDS")
  )
```
